#!/usr/bin/env python3
#
# This scripts reads the BASE_CLIENTS from yt-dlp
# and transforms them into a Go file.

import urllib.request
import ast
import json
import re

URL = 'https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/yt_dlp/extractor/youtube.py'
BASE_CLIENTS = ('mweb', 'ios', 'tv', 'web', 'android')

def findValue(root, nodeId):
    clients = None
    for node in ast.walk(root):
        if isinstance(node, ast.Assign):
            target = node.targets[0]
            if isinstance(target, ast.Name) and isinstance(target.ctx, ast.Store) and target.id == nodeId:
                return node.value


with urllib.request.urlopen(URL) as response:
    raw_dict = findValue(ast.parse(response.read()), "INNERTUBE_CLIENTS")
    dict = ast.literal_eval(raw_dict)

    print("// Code generated by go generate; DO NOT EDIT.")
    print("package youtube\n")
    print("// Source: %s" % URL)
    print("var clientInfos = []clientInfo{")
    for name, attr in dict.items():
        print('{\n  name: %s,' % json.dumps(name))

        # Calculate priority
        base, *variant = name.split('_', 1)
        priority = 10 * BASE_CLIENTS.index(base)
        if variant:
            variant = variant[0]

        if variant == 'embedded':
            priority -= 2
        elif variant:
            priority -= 3
        print('  priority: %s,' % priority)

        # Require JS player
        v = attr.get("REQUIRE_JS_PLAYER", True)
        if v:
            print('  requireJsPlayer: true,')

        # API Key
        v = attr.get("INNERTUBE_API_KEY")
        if v:
            print('  innertubeApiKey: %s,' % json.dumps(v))

        # Other attributes
        print('  innertubeContext: innertubeContext{')
        for k, v in attr["INNERTUBE_CONTEXT"].items():
            print("    %s: innertube%s{" % (k.capitalize(), k.capitalize()))
            for kk, vv in v.items():
                print("      %s: %s," % (kk.capitalize(), json.dumps(vv)))

            print("    },")
        print("  },")
        print('},')
    print("}")
